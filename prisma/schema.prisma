// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




// Models

model User {
  id        String   @id @default(uuid()) @unique @db.Uuid
  login     String   @unique
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id        String @id @default(uuid()) @unique @db.Uuid
  name      String
  grammy    Boolean @default(false)
  tracks    Track[]
  albums    Album[]
  favorites Favorites[]
}

model Track {
  id        String  @id @default(uuid()) @unique @db.Uuid
  name      String
  duration  Int
  artistId  String? @db.Uuid
  albumId   String? @db.Uuid
  artist    Artist? @relation(fields: [artistId], references: [id])
  album     Album?  @relation(fields: [albumId], references: [id])
  favorites Favorites[]
}

model Album {
  id        String  @id @default(uuid()) @unique @db.Uuid
  name      String
  year      Int
  artistId  String? @db.Uuid
  artist    Artist? @relation(fields: [artistId], references: [id])
  tracks    Track[]
  favorites Favorites[]
}

model Favorites {
  id      String   @id @default(uuid()) @unique
  artists Artist[]
  albums  Album[]
  tracks  Track[]
}
